<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<interceptors>
		<interceptor>
			<mapping path="/board/**" />
			<exclude-mapping path="/board/error" />
			<exclude-mapping path="/board/list" />
			<beans:bean class="web.interceptor.BoardInterceptor" />
		</interceptor>
	</interceptors>
	
	<interceptors>
		<interceptor>
		<!-- 인터셉터가 반응할 페이지 -->
			<mapping path="/interceptor/admin/**" />
			
			<!-- 인터셉터 제외 페이지 -->
			<exclude-mapping path="/interceptor/admin/fail" />
			
			<!-- 인터셉터 클래스 지정 -->
			<beans:bean class="web.interceptor.AdminInterceptor" />
		</interceptor>
	</interceptors>

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/upload/**" location="/upload/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1" />
	</beans:bean>

	<beans:bean
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>
	
	<beans:bean id="jsonView"
		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType"
			value="application/json;charset=utf-8" />
	</beans:bean>
	
	<!-- MultipartResolver -->
	<!-- 파일업로드 요청(multipart/form-data)을 처리하는 클래스 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- 메모리에서 파일을 처리하는 사이즈 제한 : 1MB -->
		<beans:property name="maxInMemorySize" value="1048576" />
		<!-- 한번 요청할 때 파일의 최대 사이즈 제한 : 200MB -->
		<beans:property name="maxUploadSize" value="209715200" />
		<!-- 파일 당 최대 사이즈 제한 : 100MB -->
		<beans:property name="maxUploadSizePerFile"
			value="104857600" />
	</beans:bean>

	<context:component-scan
		base-package="web.controller, web.service, file.dao.controller, file.service, com.devmg.app, com.devmg.service" />
		
	

	<!-- NaverLoginBO bean 추가 -->
	<beans:bean id="web.naverLoginBO"
		class="web.naver.NaverLoginBO" />

</beans:beans>
